import lib.std
import lib.std.list
import lib.std.dict


# ARGS
# Contains a list with positional arguments and a dictionary with keyword arguments.

const args.posargs 0  # ptr
const args.kwargs  8  # ptr
const ARGS_SIZE    16

buffer _parsed_args 8  # ptr


def get_argument: ptr argv, int n, int argc -> ptr
    # Takes an array of arguments argv and returns the n'th argument
    n argc >= if
        "Could not parse arguments due to index error" raise

    argv 0 while dup n <
        swap dup strlen + 1 + swap
        1 +
    drop


def parse_args: ptr argv, int argc -> ptr
    # Parses arguments and returns an args object

    # Initialize args object
    ARGS_SIZE malloc
    PTR_SIZE new_list over args.posargs + setp
    new_dict          over args.kwargs + setp
    _parsed_args setp

    # Parse arguments
    1
    while dup argc <
        argv over argc get_argument

        dup "-" startswith if
            swap 1 +
            argv over argc get_argument
            rot swap
            _parsed_args derefp args.kwargs + derefp
            dict_insert
            _parsed_args derefp args.kwargs + setp
        else
            _parsed_args derefp args.posargs + derefp
            list_append_ptr
            _parsed_args derefp args.posargs + setp

        1 +

    _parsed_args derefp
