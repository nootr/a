import lib.std
import lib.ilo.types


## Structs

# FUNCTION
# A function signature containing information about its arguments and return type.

const function.name         0   # ptr
const function.args         8   # ptr to list of arguments
const function.return_type  16  # int
const FUNCTION_SIZE         24


# ARGUMENT
# Contains information about an argument.

const argument.name  0  # ptr
const argument.type  8  # int
const ARGUMENT_SIZE  16


def create_function: ptr name -> ptr
    # Creates a function and returns its pointer
    FUNCTION_SIZE malloc
    name                    over function.name +        setp
    ARGUMENT_SIZE new_list  over function.args +        setp
    TYPE_VOID               over function.return_type + seti


def function_add_argument: ptr name, int type, ptr func -> void
    # Adds an argument to a function
    ARGUMENT_SIZE malloc
    name  over argument.name + setp
    type  over argument.type + seti

    func function.args + derefp list_append
    func function.args + setp


def function_set_return_type: int type, ptr func -> void
    # Sets a function's return type
    type func function.return_type + seti


def function_get_from_list: ptr name, ptr list -> ptr
    # Returns a function if it's in the given list, otherwise returns NULL
    NULL  # function
    0     # index
    while dup list list.len + derefi <
        dup list list_fetch
        dup function.name + derefp name streq if
            # result index function
            rot drop dup rot rot
            # function index function
        drop
        1 +
    drop


def function_get_current: ptr list -> ptr
    # Returns the current function
    list list_peek


def function_get_arg_offset: ptr name, ptr func -> int
    # Returns the memory offset of a given argument, returns -1 if not found
    0 1 - # argument offset
    0     # index
    while dup func function.args + derefp list.len + derefi <
        dup func function.args + derefp list_fetch
        argument.name + derefp name streq if
            swap drop
            func function.args + derefp list.len + derefi
            over -
            3 +
            8 *
            swap
        1 +
    drop
