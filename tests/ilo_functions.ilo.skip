# Description:ilo.constants - Functions
# Exit code:0
# Stdout:
# Stderr:

import lib.std
import lib.ilo.functions
import lib.ilo.types


buffer _functions 8  # ptr


def main: int argc, ptr argv -> int
    "foo" create_function
    FUNCTION_SIZE new_list list_append _functions setp

    "bar" create_function
    _functions derefp list_append _functions setp

    TYPE_INT "arg1" _functions derefp function_get_current function_add_argument
    TYPE_PTR "arg2" _functions derefp function_get_current function_add_argument

    TYPE_BOOL _functions derefp function_get_current function_set_return_type

    _functions derefp function_get_current function.name + derefp "bar" streq \
        "Current function should be named foo" assert
    _functions derefp function_get_current function.args + derefp list.len + derefi 2 = \
        "Current function should have 2 arguments" assert
    _functions derefp function_get_current function.return_type + derefi TYPE_BOOL = \
        "Current function should return bool" assert

    0 _functions derefp function_get_current function.args + derefp list_fetch
    dup argument.name + derefp "arg1" streq "First argument should be arg1" assert
    dup argument.type + derefi TYPE_INT = "First argument should be int" assert
    drop

    1 _functions derefp function_get_current function.args + derefp list_fetch
    dup argument.name + derefp "arg2" streq "Second argument should be arg2" assert
    dup argument.type + derefi TYPE_PTR = "Second argument should be ptr" assert
    drop

    "arg1" _functions derefp function_get_current function_get_arg_offset 40 = \
        "First argument should have a memory offset of 40" assert
    "arg2" _functions derefp function_get_current function_get_arg_offset 32 = \
        "Second argument should have a memory offset of 32" assert
    "arg3" _functions derefp function_get_current function_get_arg_offset 0 1 - = \
        "Unknown argument should return offset -1" assert

    "bar" _functions derefp function_get_from_list
    _functions derefp function_get_current = "Foo should be func ptr" assert
    "foo" _functions derefp function_get_from_list function.args + derefp \
        list.len + derefi 0 = "Foo should have zero arguments" assert
    "bar" _functions derefp function_get_from_list function.args + derefp \
        list.len + derefi 2 = "Bar should have two arguments" assert
    "baz" _functions derefp function_get_from_list NULL = \
        "Baz should not be in the list" assert
    0
