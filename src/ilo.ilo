import lib.std
import lib.std.argparse
import lib.ilo.generator
import lib.ilo.lexer
import lib.ilo.parser


buffer DUMP_TOKENS  1  # bool
buffer DUMP_OPCODES 1  # bool


def main: ptr argv, int argc -> int
    # Parse arguments
    argv argc parse_args

    "--verify-memory" over args.kwargs + derefp dict_fetch NULL != \
        VERIFY_MEMORY setb
    "--dump-memory" over args.kwargs + derefp dict_fetch NULL != \
        DUMP_MEMORY setb
    "--dump-tokens" over args.kwargs + derefp dict_fetch NULL != \
        DUMP_TOKENS setb
    "--dump-opcodes" over args.kwargs + derefp dict_fetch NULL != \
        DUMP_OPCODES setb

    dup args.posargs + derefp list.len + derefi 1 !=
    over args.kwargs + derefp "--help" swap dict_fetch NULL != or if
        "Usage: "                                                 puts
        argv 0 argc get_argument                                  puts
        " [--verify-memory True] [--dump-memory True] FILENAME\n" puts
        1 exit

    0 over args.posargs + derefp list_fetch_ptr
    dup read_file
    tokenize

    DUMP_TOKENS derefb if
        dup dump_tokens

    parse

    DUMP_OPCODES derefb if
        dup dump_opcodes

    generate_code_x86_64_linux

    0
